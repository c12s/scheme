// Code generated by protoc-gen-go. DO NOT EDIT.
// source: celestial/celestial.proto

/*
Package celestial is a generated protocol buffer package.

It is generated from these files:
	celestial/celestial.proto

It has these top-level messages:
	ListReq
	ListResp
	MutateReq
	MutateResp
*/
package celestial

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import core "github.com/c12s/scheme/core"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Enumerations
type ReqKind int32

const (
	ReqKind_SECRETS    ReqKind = 0
	ReqKind_CONFIGS    ReqKind = 1
	ReqKind_ACTIONS    ReqKind = 2
	ReqKind_NAMESPACES ReqKind = 3
)

var ReqKind_name = map[int32]string{
	0: "SECRETS",
	1: "CONFIGS",
	2: "ACTIONS",
	3: "NAMESPACES",
}
var ReqKind_value = map[string]int32{
	"SECRETS":    0,
	"CONFIGS":    1,
	"ACTIONS":    2,
	"NAMESPACES": 3,
}

func (x ReqKind) String() string {
	return proto.EnumName(ReqKind_name, int32(x))
}
func (ReqKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// List messages
type ListReq struct {
	Kind   ReqKind           `protobuf:"varint,1,opt,name=kind,enum=celestial.ReqKind" json:"kind,omitempty"`
	Extras map[string]string `protobuf:"bytes,2,rep,name=extras" json:"extras,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ListReq) Reset()                    { *m = ListReq{} }
func (m *ListReq) String() string            { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()               {}
func (*ListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ListReq) GetKind() ReqKind {
	if m != nil {
		return m.Kind
	}
	return ReqKind_SECRETS
}

func (m *ListReq) GetExtras() map[string]string {
	if m != nil {
		return m.Extras
	}
	return nil
}

type ListResp struct {
	RegionId  string            `protobuf:"bytes,1,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	ClusterId string            `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	NodeId    string            `protobuf:"bytes,3,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Data      map[string]string `protobuf:"bytes,4,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Extras    map[string]string `protobuf:"bytes,5,rep,name=extras" json:"extras,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Error     string            `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
}

func (m *ListResp) Reset()                    { *m = ListResp{} }
func (m *ListResp) String() string            { return proto.CompactTextString(m) }
func (*ListResp) ProtoMessage()               {}
func (*ListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListResp) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *ListResp) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ListResp) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ListResp) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListResp) GetExtras() map[string]string {
	if m != nil {
		return m.Extras
	}
	return nil
}

func (m *ListResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type MutateReq struct {
	Mutate *core.Task `protobuf:"bytes,1,opt,name=mutate" json:"mutate,omitempty"`
}

func (m *MutateReq) Reset()                    { *m = MutateReq{} }
func (m *MutateReq) String() string            { return proto.CompactTextString(m) }
func (*MutateReq) ProtoMessage()               {}
func (*MutateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MutateReq) GetMutate() *core.Task {
	if m != nil {
		return m.Mutate
	}
	return nil
}

// Mutate messages
type MutateResp struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *MutateResp) Reset()                    { *m = MutateResp{} }
func (m *MutateResp) String() string            { return proto.CompactTextString(m) }
func (*MutateResp) ProtoMessage()               {}
func (*MutateResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MutateResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*ListReq)(nil), "celestial.ListReq")
	proto.RegisterType((*ListResp)(nil), "celestial.ListResp")
	proto.RegisterType((*MutateReq)(nil), "celestial.MutateReq")
	proto.RegisterType((*MutateResp)(nil), "celestial.MutateResp")
	proto.RegisterEnum("celestial.ReqKind", ReqKind_name, ReqKind_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CelestialService service

type CelestialServiceClient interface {
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	Mutate(ctx context.Context, in *MutateReq, opts ...grpc.CallOption) (*MutateResp, error)
}

type celestialServiceClient struct {
	cc *grpc.ClientConn
}

func NewCelestialServiceClient(cc *grpc.ClientConn) CelestialServiceClient {
	return &celestialServiceClient{cc}
}

func (c *celestialServiceClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := grpc.Invoke(ctx, "/celestial.CelestialService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialServiceClient) Mutate(ctx context.Context, in *MutateReq, opts ...grpc.CallOption) (*MutateResp, error) {
	out := new(MutateResp)
	err := grpc.Invoke(ctx, "/celestial.CelestialService/Mutate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CelestialService service

type CelestialServiceServer interface {
	List(context.Context, *ListReq) (*ListResp, error)
	Mutate(context.Context, *MutateReq) (*MutateResp, error)
}

func RegisterCelestialServiceServer(s *grpc.Server, srv CelestialServiceServer) {
	s.RegisterService(&_CelestialService_serviceDesc, srv)
}

func _CelestialService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/celestial.CelestialService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServiceServer).List(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CelestialService_Mutate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServiceServer).Mutate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/celestial.CelestialService/Mutate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServiceServer).Mutate(ctx, req.(*MutateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CelestialService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "celestial.CelestialService",
	HandlerType: (*CelestialServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _CelestialService_List_Handler,
		},
		{
			MethodName: "Mutate",
			Handler:    _CelestialService_Mutate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "celestial/celestial.proto",
}

func init() { proto.RegisterFile("celestial/celestial.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x5e, 0xd2, 0x2e, 0x5d, 0x5e, 0xa5, 0x11, 0x99, 0x21, 0x42, 0xd0, 0xa0, 0xca, 0x01, 0x4d,
	0x1c, 0x12, 0x2d, 0x48, 0x0c, 0x38, 0x51, 0x42, 0x40, 0x11, 0xac, 0x43, 0x49, 0x4f, 0x5c, 0x90,
	0x97, 0x3c, 0x6d, 0x51, 0xdb, 0xa4, 0xb3, 0xdd, 0x89, 0x5d, 0xf8, 0x35, 0xfc, 0x25, 0xfe, 0x0f,
	0xb2, 0x9d, 0xa5, 0x95, 0xda, 0x0b, 0xe2, 0x12, 0xf9, 0x7d, 0xdf, 0xfb, 0x9e, 0xf3, 0x7d, 0xb6,
	0xe1, 0x49, 0x81, 0x73, 0xe4, 0xa2, 0xa2, 0xf3, 0xb0, 0x5b, 0x05, 0x4b, 0xd6, 0x88, 0x86, 0xd8,
	0x1d, 0xe0, 0x3d, 0x28, 0x1a, 0x86, 0xa1, 0xfc, 0x68, 0xce, 0xff, 0x6d, 0xc0, 0xe0, 0x6b, 0xc5,
	0x45, 0x86, 0x37, 0xe4, 0x05, 0xf4, 0x67, 0x55, 0x5d, 0xba, 0xc6, 0xc8, 0x38, 0x39, 0x8c, 0x48,
	0xb0, 0x9e, 0x93, 0xe1, 0xcd, 0x97, 0xaa, 0x2e, 0x33, 0xc5, 0x93, 0xd7, 0x60, 0xe1, 0x4f, 0xc1,
	0x28, 0x77, 0xcd, 0x51, 0xef, 0x64, 0x18, 0x3d, 0xdb, 0xe8, 0x6c, 0x67, 0x05, 0x89, 0x6a, 0x48,
	0x6a, 0xc1, 0xee, 0xb2, 0xb6, 0xdb, 0x7b, 0x0b, 0xc3, 0x0d, 0x98, 0x38, 0xd0, 0x9b, 0xe1, 0x9d,
	0xda, 0xcd, 0xce, 0xe4, 0x92, 0x1c, 0xc1, 0xfe, 0x2d, 0x9d, 0xaf, 0xd0, 0x35, 0x15, 0xa6, 0x8b,
	0x77, 0xe6, 0x1b, 0xc3, 0xff, 0x63, 0xc2, 0x81, 0x1e, 0xcd, 0x97, 0xe4, 0x29, 0xd8, 0x0c, 0xaf,
	0xaa, 0xa6, 0xfe, 0x51, 0x95, 0xad, 0xfc, 0x40, 0x03, 0x69, 0x49, 0x8e, 0x01, 0x8a, 0xf9, 0x8a,
	0x0b, 0x64, 0x92, 0xd5, 0x83, 0xec, 0x16, 0x49, 0x4b, 0xf2, 0x18, 0x06, 0x75, 0x53, 0xa2, 0xe4,
	0x7a, 0x8a, 0xb3, 0x64, 0x99, 0x96, 0xe4, 0x14, 0xfa, 0x25, 0x15, 0xd4, 0xed, 0x2b, 0x4b, 0xc7,
	0x5b, 0x96, 0xf8, 0x32, 0xf8, 0x48, 0x05, 0xd5, 0x8e, 0x54, 0x2b, 0x39, 0xeb, 0x72, 0xd8, 0x57,
	0xa2, 0xe7, 0xbb, 0x44, 0x3b, 0x82, 0x90, 0x3e, 0x91, 0xb1, 0x86, 0xb9, 0x96, 0xf6, 0xa9, 0x0a,
	0xef, 0x0c, 0xec, 0x6e, 0x87, 0x7f, 0x09, 0xe7, 0x7f, 0x72, 0x0d, 0xc1, 0x3e, 0x5f, 0x09, 0x2a,
	0x50, 0x9e, 0xbf, 0x0f, 0xd6, 0x42, 0x15, 0x4a, 0x3b, 0x8c, 0x20, 0x50, 0x17, 0x65, 0x4a, 0xf9,
	0x2c, 0x6b, 0x19, 0xdf, 0x07, 0xb8, 0x17, 0xf0, 0xe5, 0xda, 0x88, 0xb1, 0x61, 0xe4, 0xe5, 0x7b,
	0x18, 0xb4, 0x17, 0x86, 0x0c, 0x61, 0x90, 0x27, 0x71, 0x96, 0x4c, 0x73, 0x67, 0x4f, 0x16, 0xf1,
	0xc5, 0xe4, 0x53, 0xfa, 0x39, 0x77, 0x0c, 0x59, 0x8c, 0xe3, 0x69, 0x7a, 0x31, 0xc9, 0x1d, 0x93,
	0x1c, 0x02, 0x4c, 0xc6, 0xe7, 0x49, 0xfe, 0x6d, 0x1c, 0x27, 0xb9, 0xd3, 0x8b, 0x7e, 0x81, 0x13,
	0xdf, 0x47, 0x99, 0x23, 0xbb, 0xad, 0x0a, 0x94, 0x07, 0x24, 0x43, 0x25, 0x64, 0xfb, 0xb6, 0x79,
	0x0f, 0x77, 0x24, 0xef, 0xef, 0xc9, 0x03, 0xd2, 0x3f, 0x4b, 0x8e, 0x36, 0x1a, 0x3a, 0xc3, 0xde,
	0xa3, 0x1d, 0xa8, 0x14, 0x7e, 0xf0, 0xbf, 0x8f, 0xae, 0x2a, 0x71, 0xbd, 0xba, 0x0c, 0x8a, 0x66,
	0x11, 0x16, 0xa7, 0x11, 0x0f, 0x79, 0x71, 0x8d, 0x0b, 0x5c, 0xbf, 0xad, 0x4b, 0x4b, 0x3d, 0xa0,
	0x57, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xac, 0x96, 0x18, 0x40, 0x79, 0x03, 0x00, 0x00,
}
