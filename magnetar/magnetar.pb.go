// Code generated by protoc-gen-go. DO NOT EDIT.
// source: magnetar/magnetar.proto

package magnetar

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReserveMsg struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveMsg) Reset()         { *m = ReserveMsg{} }
func (m *ReserveMsg) String() string { return proto.CompactTextString(m) }
func (*ReserveMsg) ProtoMessage()    {}
func (*ReserveMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_d955f06648f68850, []int{0}
}

func (m *ReserveMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveMsg.Unmarshal(m, b)
}
func (m *ReserveMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveMsg.Marshal(b, m, deterministic)
}
func (m *ReserveMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveMsg.Merge(m, src)
}
func (m *ReserveMsg) XXX_Size() int {
	return xxx_messageInfo_ReserveMsg.Size(m)
}
func (m *ReserveMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveMsg proto.InternalMessageInfo

func (m *ReserveMsg) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ReserveRsp struct {
	Taken                int32    `protobuf:"varint,1,opt,name=taken,proto3" json:"taken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveRsp) Reset()         { *m = ReserveRsp{} }
func (m *ReserveRsp) String() string { return proto.CompactTextString(m) }
func (*ReserveRsp) ProtoMessage()    {}
func (*ReserveRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d955f06648f68850, []int{1}
}

func (m *ReserveRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveRsp.Unmarshal(m, b)
}
func (m *ReserveRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveRsp.Marshal(b, m, deterministic)
}
func (m *ReserveRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveRsp.Merge(m, src)
}
func (m *ReserveRsp) XXX_Size() int {
	return xxx_messageInfo_ReserveRsp.Size(m)
}
func (m *ReserveRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveRsp proto.InternalMessageInfo

func (m *ReserveRsp) GetTaken() int32 {
	if m != nil {
		return m.Taken
	}
	return 0
}

type ListRsp struct {
	Data                 map[string]*DataMsg `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListRsp) Reset()         { *m = ListRsp{} }
func (m *ListRsp) String() string { return proto.CompactTextString(m) }
func (*ListRsp) ProtoMessage()    {}
func (*ListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d955f06648f68850, []int{2}
}

func (m *ListRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRsp.Unmarshal(m, b)
}
func (m *ListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRsp.Marshal(b, m, deterministic)
}
func (m *ListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRsp.Merge(m, src)
}
func (m *ListRsp) XXX_Size() int {
	return xxx_messageInfo_ListRsp.Size(m)
}
func (m *ListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ListRsp proto.InternalMessageInfo

func (m *ListRsp) GetData() map[string]*DataMsg {
	if m != nil {
		return m.Data
	}
	return nil
}

type DataMsg struct {
	Data                 map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataMsg) Reset()         { *m = DataMsg{} }
func (m *DataMsg) String() string { return proto.CompactTextString(m) }
func (*DataMsg) ProtoMessage()    {}
func (*DataMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_d955f06648f68850, []int{3}
}

func (m *DataMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataMsg.Unmarshal(m, b)
}
func (m *DataMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataMsg.Marshal(b, m, deterministic)
}
func (m *DataMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataMsg.Merge(m, src)
}
func (m *DataMsg) XXX_Size() int {
	return xxx_messageInfo_DataMsg.Size(m)
}
func (m *DataMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DataMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DataMsg proto.InternalMessageInfo

func (m *DataMsg) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ReserveMsg)(nil), "magnetar.ReserveMsg")
	proto.RegisterType((*ReserveRsp)(nil), "magnetar.ReserveRsp")
	proto.RegisterType((*ListRsp)(nil), "magnetar.ListRsp")
	proto.RegisterMapType((map[string]*DataMsg)(nil), "magnetar.ListRsp.DataEntry")
	proto.RegisterType((*DataMsg)(nil), "magnetar.DataMsg")
	proto.RegisterMapType((map[string]string)(nil), "magnetar.DataMsg.DataEntry")
}

func init() {
	proto.RegisterFile("magnetar/magnetar.proto", fileDescriptor_d955f06648f68850)
}

var fileDescriptor_d955f06648f68850 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x3b, 0x4f, 0xf3, 0x40,
	0x10, 0xcc, 0xe5, 0xf1, 0xf9, 0xf3, 0xa6, 0x80, 0x9c, 0x2c, 0x61, 0x05, 0x09, 0xcc, 0x35, 0xb8,
	0xb2, 0x15, 0x53, 0x04, 0x51, 0x22, 0x68, 0x10, 0x6e, 0x8e, 0x8e, 0xee, 0xe2, 0xac, 0x1c, 0x2b,
	0xf8, 0x21, 0xdf, 0xc5, 0x52, 0x0a, 0x5a, 0x7e, 0x37, 0x3a, 0xc7, 0xb1, 0x23, 0x59, 0xa1, 0xdb,
	0xc7, 0xec, 0xcc, 0x68, 0x16, 0xae, 0x52, 0x11, 0x67, 0xa8, 0x44, 0xe9, 0x1f, 0x0b, 0xaf, 0x28,
	0x73, 0x95, 0xd3, 0xff, 0xc7, 0x9e, 0xdd, 0x00, 0x70, 0x94, 0x58, 0x56, 0x18, 0xca, 0x98, 0x5e,
	0xc2, 0x28, 0x59, 0x4b, 0x9b, 0x38, 0x23, 0xd7, 0xe4, 0xba, 0x64, 0xac, 0xdd, 0x73, 0x59, 0x50,
	0x0b, 0x26, 0x4a, 0x6c, 0x31, 0xb3, 0x89, 0x43, 0xdc, 0x09, 0x3f, 0x34, 0xec, 0x87, 0x80, 0xf1,
	0x9e, 0x48, 0xa5, 0x11, 0x3e, 0x8c, 0xd7, 0x42, 0x89, 0x9a, 0x62, 0x1a, 0x5c, 0x7b, 0xad, 0x70,
	0x03, 0xf0, 0x5e, 0x84, 0x12, 0xaf, 0x99, 0x2a, 0xf7, 0xbc, 0x06, 0xce, 0xdf, 0xc0, 0x6c, 0x47,
	0x5a, 0x7f, 0x8b, 0xfb, 0x9a, 0xdd, 0xe4, 0xba, 0xa4, 0xf7, 0x30, 0xa9, 0xc4, 0xd7, 0x0e, 0xed,
	0xa1, 0x43, 0xdc, 0x69, 0x30, 0xeb, 0x08, 0xf5, 0x55, 0x28, 0x63, 0x7e, 0xd8, 0x3f, 0x0d, 0x1f,
	0x09, 0x93, 0x60, 0x34, 0xd3, 0xf3, 0x3e, 0x1a, 0x40, 0xcf, 0xc7, 0xf2, 0x6f, 0x1f, 0xd6, 0xa9,
	0x0f, 0xf3, 0x44, 0x34, 0xf8, 0x86, 0x8b, 0xb0, 0x21, 0xff, 0xc0, 0xb2, 0x4a, 0x22, 0xa4, 0x4b,
	0x30, 0x9a, 0xd0, 0xa8, 0xd5, 0x29, 0x77, 0x39, 0xcf, 0xfb, 0x53, 0x2e, 0x0b, 0x36, 0xa0, 0x0b,
	0x18, 0xeb, 0x9c, 0xce, 0x5c, 0xcd, 0x7a, 0x69, 0xb2, 0xc1, 0xf3, 0xdd, 0xe7, 0x6d, 0x9c, 0xa8,
	0xcd, 0x6e, 0xe5, 0x45, 0x79, 0xea, 0x47, 0x8b, 0x40, 0xfa, 0x32, 0xda, 0x60, 0x8a, 0xed, 0xcf,
	0x57, 0xff, 0xea, 0xa7, 0x3f, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0x14, 0x1b, 0xce, 0xe1, 0x0f,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MagnetarServiceClient is the client API for MagnetarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MagnetarServiceClient interface {
	Reserve(ctx context.Context, in *ReserveMsg, opts ...grpc.CallOption) (*ReserveRsp, error)
	List(ctx context.Context, in *ReserveMsg, opts ...grpc.CallOption) (*ListRsp, error)
}

type magnetarServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMagnetarServiceClient(cc grpc.ClientConnInterface) MagnetarServiceClient {
	return &magnetarServiceClient{cc}
}

func (c *magnetarServiceClient) Reserve(ctx context.Context, in *ReserveMsg, opts ...grpc.CallOption) (*ReserveRsp, error) {
	out := new(ReserveRsp)
	err := c.cc.Invoke(ctx, "/magnetar.MagnetarService/Reserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *magnetarServiceClient) List(ctx context.Context, in *ReserveMsg, opts ...grpc.CallOption) (*ListRsp, error) {
	out := new(ListRsp)
	err := c.cc.Invoke(ctx, "/magnetar.MagnetarService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MagnetarServiceServer is the server API for MagnetarService service.
type MagnetarServiceServer interface {
	Reserve(context.Context, *ReserveMsg) (*ReserveRsp, error)
	List(context.Context, *ReserveMsg) (*ListRsp, error)
}

// UnimplementedMagnetarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMagnetarServiceServer struct {
}

func (*UnimplementedMagnetarServiceServer) Reserve(ctx context.Context, req *ReserveMsg) (*ReserveRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reserve not implemented")
}
func (*UnimplementedMagnetarServiceServer) List(ctx context.Context, req *ReserveMsg) (*ListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterMagnetarServiceServer(s *grpc.Server, srv MagnetarServiceServer) {
	s.RegisterService(&_MagnetarService_serviceDesc, srv)
}

func _MagnetarService_Reserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MagnetarServiceServer).Reserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magnetar.MagnetarService/Reserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MagnetarServiceServer).Reserve(ctx, req.(*ReserveMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _MagnetarService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MagnetarServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magnetar.MagnetarService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MagnetarServiceServer).List(ctx, req.(*ReserveMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _MagnetarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magnetar.MagnetarService",
	HandlerType: (*MagnetarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reserve",
			Handler:    _MagnetarService_Reserve_Handler,
		},
		{
			MethodName: "List",
			Handler:    _MagnetarService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "magnetar/magnetar.proto",
}
